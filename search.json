[{"path":[]},{"path":"https://pydemull.github.io/activAnalyzer/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://pydemull.github.io/activAnalyzer/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted [Contributor Covenant][homepage], version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pydemull.github.io/activAnalyzer/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pydemull.github.io/activAnalyzer/articles/activAnalyzer.html","id":"loading-packages","dir":"Articles","previous_headings":"","what":"Loading packages","title":"activAnalyzer","text":"","code":"library(activAnalyzer) library(magrittr) library(ggplot2)"},{"path":"https://pydemull.github.io/activAnalyzer/articles/activAnalyzer.html","id":"getting-file","dir":"Articles","previous_headings":"","what":"Getting file","title":"activAnalyzer","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\")"},{"path":"https://pydemull.github.io/activAnalyzer/articles/activAnalyzer.html","id":"preparing-dataset","dir":"Articles","previous_headings":"","what":"Preparing dataset","title":"activAnalyzer","text":"","code":"mydata <- prepare_dataset(   data = file,    epoch_len_out = 60,    col_time_stamp = \"timestamp\"   )"},{"path":"https://pydemull.github.io/activAnalyzer/articles/activAnalyzer.html","id":"getting-nonwearwear-time-marks","dir":"Articles","previous_headings":"","what":"Getting nonwear/wear time marks","title":"activAnalyzer","text":"","code":"mydata_with_wear_marks <-    mydata %>%   mark_wear_time(frame = 90, allowanceFrame = 2, streamFrame = 30)  plot_data(data = mydata_with_wear_marks, metric = \"vm\") #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2"},{"path":"https://pydemull.github.io/activAnalyzer/articles/activAnalyzer.html","id":"getting-physical-activity-intensity-marks","dir":"Articles","previous_headings":"","what":"Getting physical activity intensity marks","title":"activAnalyzer","text":"","code":"mydata_with_intensity_marks <-    mark_intensity(      data = mydata_with_wear_marks,       col_axis = \"vm\",       equation = \"Sasaki et al. (2011) [Adults]\",      sed_cutpoint = 200,       mpa_cutpoint = 2690,       vpa_cutpoint = 6167,       age = 32,      weight = 67,      sex = \"male\",     )  plot_data_with_intensity(   mydata_with_intensity_marks,   metric = \"vm\"   )"},{"path":"https://pydemull.github.io/activAnalyzer/articles/activAnalyzer.html","id":"getting-results-by-day","dir":"Articles","previous_headings":"","what":"Getting results by day","title":"activAnalyzer","text":"","code":"results_by_day <-   mydata_with_intensity_marks %>%   recap_by_day(     age = 32,      weight = 67,      sex = \"male\",     valid_wear_time_start = \"07:00:00\",     valid_wear_time_end = \"22:00:00\"     )  results_by_day"},{"path":"https://pydemull.github.io/activAnalyzer/articles/activAnalyzer.html","id":"getting-results-averaged-over-valid-days","dir":"Articles","previous_headings":"","what":"Getting results averaged over valid days","title":"activAnalyzer","text":"","code":"averaged_results <-   results_by_day %>%   average_results(minimum_wear_time = 10, fun = \"mean\")  averaged_results"},{"path":"https://pydemull.github.io/activAnalyzer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pierre-Yves de Müllenheim. Maintainer, author.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"de Müllenheim P (2022). activAnalyzer: Shiny app analyze accelerometer-measured daily physical behavior. https://pydemull.github.io/activAnalyzer, https://github.com/pydemull/activAnalyzer.","code":"@Manual{,   title = {activAnalyzer: A Shiny app to analyze accelerometer-measured daily physical behavior},   author = {Pierre-Yves {de Müllenheim}},   year = {2022},   note = {https://pydemull.github.io/activAnalyzer, https://github.com/pydemull/activAnalyzer}, }"},{"path":"https://pydemull.github.io/activAnalyzer/index.html","id":"activanalyzer","dir":"","previous_headings":"","what":"A Shiny app to analyze accelerometer-measured daily physical behavior","title":"A Shiny app to analyze accelerometer-measured daily physical behavior","text":"activAnalyzer Shinny app developed analyze daily physical behavior data recorded hip adults using ActiGraph accelerometer (.agd files). analysis completed, app allows export results (summarized day means medians valid days) .csv files generate report measurement (.pdf file). configured inputs relevant interpreting results recorded report. sure inputs configured generating report correspond analysis actually performed (words, avoid modifying inputs generating satisfactory results). Please read user’s guide details app works.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Shiny app to analyze accelerometer-measured daily physical behavior","text":"three different ways use activAnalyzer app: web via shinyapps.io plateform (stable version). information, indicated RStudio, “shinyapps.io secure--design. Shiny application runs protected environment access always SSL encrypted”. Importantly, app hosted using free account allows run apps 25 hours per month. Thus, availability app web dependent number users well time spent user app. ’s second option available use app (see ) may appropriate (Windows users ). Google Chrome Microsoft Edge browsers allow app work expected Mozilla Firefox seem allow reseting inputs required. Locally PC via standalone desktop app downloadable SourceForge website (stable version, Windows machines ). standalone app developped using framework DesktopDeployR made available W. Lee Pang. Explanations related framework can retrieved dedicated GitHub repository. app installed PC, double-click desktop app icon (chosen option installation process), run R-portable version embedded app launch app default web browser 127.0.0.1 value host parameter. means current machine can access app. can open one session time. written , Google Chrome Microsoft Edge browsers allow app work expected Mozilla Firefox seem allow reseting inputs required. Locally machine via R software, RStudio environment, activAnalyzer package installable GitHub (development version). able generate .pdf reports, install TinyTeX distribution. short, installing R RStudio, can run following command lines RStudio console:","code":"# Code for installing the activAnalyzer package install.packages(\"devtools\") devtools::install_github(\"pydemull/activAnalyzer\")  # Code for installing the TinyTex distribution  tinytex::install_tinytex()"},{"path":"https://pydemull.github.io/activAnalyzer/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Shiny app to analyze accelerometer-measured daily physical behavior","text":"launch app using R:","code":"library(activAnalyzer) activAnalyzer::run_app()"},{"path":"https://pydemull.github.io/activAnalyzer/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Shiny app to analyze accelerometer-measured daily physical behavior","text":"Please note activAnalyzer project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/average_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Average results over valid days — average_results","title":"Average results over valid days — average_results","text":"function computes, using valid days , mean metrics obtained using recap_by_day function. median can also obtained appropriate configuration function.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/average_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average results over valid days — average_results","text":"","code":"average_results(data, minimum_wear_time = 10, fun = c(\"mean\", \"median\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/average_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average results over valid days — average_results","text":"data dataframe obtained using prepare_dataset,  mark_wear_time, mark_intensity, recap_by_day functions. minimum_wear_time numeric value (hours) set minimum wear time duration validating day. fun character value indicating whether means medians computed.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/average_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average results over valid days — average_results","text":"dataframe.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/average_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average results over valid days — average_results","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\", frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 mydata_with_intensity_marks <- mark_intensity(     data = mydata_with_wear_marks,      col_axis = \"vm\",      equation = \"Sasaki et al. (2011) [Adults]\",     sed_cutpoint = 200,      mpa_cutpoint = 2690,      vpa_cutpoint = 6167,      age = 32,     weight = 67,     sex = \"male\",     col_steps = \"steps\"     ) #> You have computed intensity metrics with the mark_intensity() function using the following inputs:  #>     axis = vm #>     sed_cutpoint = 200 #>     mpa_cutpoint = 2690 #>     vpa_cutpoint = 6167 #>     equation = Sasaki et al. (2011) [Adults] #>     age = 32 #>     weight = 67 #>     sex = male summary_by_day <- recap_by_day(     data = mydata_with_intensity_marks,      age = 32,      weight = 67,      sex = \"male\",     valid_wear_time_start = \"07:00:00\",     valid_wear_time_end = \"22:00:00\"     ) #> You have computed results with the recap_by_day() function using the following inputs:  #>     age = 32 #>     weight = 67 #>     sex = male average_results(data = summary_by_day, minimum_wear_time = 10) #> # A tibble: 1 × 31 #>   valid_days wear_time total_counts_ax… total_counts_vm axis1_per_min vm_per_min #>        <int>     <dbl>            <dbl>           <dbl>         <dbl>      <dbl> #> 1          5      768.          513109.         951483.          687.      1266. #> # … with 25 more variables: total_steps <dbl>, total_kcal <dbl>, #> #   minutes_SED <dbl>, minutes_LPA <dbl>, minutes_MPA <dbl>, minutes_VPA <dbl>, #> #   minutes_MVPA <dbl>, percent_SED <dbl>, percent_LPA <dbl>, #> #   percent_MPA <dbl>, percent_VPA <dbl>, percent_MVPA <dbl>, #> #   max_steps_60min <dbl>, max_steps_30min <dbl>, max_steps_20min <dbl>, #> #   max_steps_5min <dbl>, max_steps_1min <dbl>, peak_steps_60min <dbl>, #> #   peak_steps_30min <dbl>, peak_steps_20min <dbl>, peak_steps_5min <dbl>, …"},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_bmr.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Basal Metabolic Rate (BMR) — compute_bmr","title":"Compute Basal Metabolic Rate (BMR) — compute_bmr","text":"function computes Basal Metabolic Rate kcal/d using Henry et al. (2005; doi: 10.1079/PHN2005801) equation. function wrapped within mark_intensity recap_by_day functions.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_bmr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Basal Metabolic Rate (BMR) — compute_bmr","text":"","code":"compute_bmr(age = 40, sex = c(\"male\", \"female\", \"undefined\"), weight = 70)"},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_bmr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Basal Metabolic Rate (BMR) — compute_bmr","text":"age numeric value yr. sex character value. weight numeric value kg.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_bmr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Basal Metabolic Rate (BMR) — compute_bmr","text":"numeric value.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_bmr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Basal Metabolic Rate (BMR) — compute_bmr","text":"","code":"compute_bmr(age = 32, sex = \"male\", weight = 67) #> You have computed BMR using the following inputs:  #>     age = 32 #>     weight = 67 #>     sex = male #> [1] 1544.4"},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_mets.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute metabolic equivalent of task (MET) values — compute_mets","title":"Compute metabolic equivalent of task (MET) values — compute_mets","text":"function computes metabolic equivalent task (METs) weight, sex, accelerometer counts, published equation one following scientific articles: Sasaki et al. (2011; doi:10.1016/j.jsams.2011.04.003); Santos-Lozano et al. (2013; 10.1055/s-0033-1337945); Freedson et al. (1998; doi: 10.1097/00005768-199805000-00021). function wrapped within mark_intensity function.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_mets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute metabolic equivalent of task (MET) values — compute_mets","text":"","code":"compute_mets(   data,   equation = c(\"Sasaki et al. (2011) [Adults]\", \"Santos-Lozano et al. (2013) [Adults]\",     \"Freedson et al. (1998) [Adults]\", \"Santos-Lozano et al. (2013) [Older adults]\"),   weight = 70,   sex = c(\"male\", \"female\", \"undefined\") )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_mets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute metabolic equivalent of task (MET) values — compute_mets","text":"data dataframe obtained using prepare_dataset function. equation character string indicate equation used estimating METs. weight numeric value kg. sex character value.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_mets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute metabolic equivalent of task (MET) values — compute_mets","text":"numeric vector.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_mets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute metabolic equivalent of task (MET) values — compute_mets","text":"","code":"library(magrittr) file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mydata %>% mark_wear_time() %>%  dplyr::filter(days == 2 & time >= hms::as_hms(\"14:00:00\") & time <= hms::as_hms(\"15:00:00\"))  #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 mets <- compute_mets(     data = mydata_with_wear_marks,     equation = \"Sasaki et al. (2011) [Adults]\",      weight = 67,      sex = \"male\"     ) #> You have computed METs using the following inputs:  #>     equation = Sasaki et al. (2011) [Adults] #>     weight = 67 #>     sex = male mets #>  [1] 0.8949561 0.7327380 0.7038361 1.6264953 2.0129726 1.0424687 0.9745765 #>  [8] 2.0743405 2.5710833 2.3169644 2.0389317 1.6229398 2.0594538 3.0195154 #> [15] 1.9986468 2.6263671 0.9333596 2.8457849 3.3511490 3.8055358 3.6651689 #> [22] 2.3520022 1.5061155 1.4802341 2.3318080 1.7323250 1.3700721 1.6565018 #> [29] 2.1610203 2.2671089 2.3021898 2.1622802 2.0982802 1.1633491 2.5672430 #> [36] 1.5259386 1.3993192 0.9658343 1.6274964 1.8818570 3.7104677 4.4919487 #> [43] 3.2321845 3.5207458 3.0480807 4.0913269 1.8696197 2.5520801 1.8434535 #> [50] 3.2717185 1.7693822 3.1329136 2.6363261 2.9928401 1.1194397 1.2969070 #> [57] 0.6688760 1.1443545 0.8221880 0.6697390 0.6688760"},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_pro_actigraph_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PROactive monitor-based physical activity score for C-PPAC tool — compute_pro_actigraph_score","title":"Compute PROactive monitor-based physical activity score for C-PPAC tool — compute_pro_actigraph_score","text":"function computes PROactive activity score based daily median mean step count vector magnitude unit (counts/min) obtained using ActiGraph accelerometer.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_pro_actigraph_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PROactive monitor-based physical activity score for C-PPAC tool — compute_pro_actigraph_score","text":"","code":"compute_pro_actigraph_score(x, metric = c(\"steps\", \"vmu\"), fun = \"median\")"},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_pro_actigraph_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PROactive monitor-based physical activity score for C-PPAC tool — compute_pro_actigraph_score","text":"x numeric value daily median daily mean step count vector magnitude unit following measurement physical activity; see Gimeno-Santos et al. (2015, online supplement, p.71, doi: 10.1183/09031936.00183014) Garcia-Aymerich et al. (2021, supplemental material, p.17; doi: 10.1136/thoraxjnl-2020-214554). metric character value indicate metric PROactive score obtained. fun character value indicate metric used function median mean results obtained day measurement.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_pro_actigraph_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PROactive monitor-based physical activity score for C-PPAC tool — compute_pro_actigraph_score","text":"numeric value.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/compute_pro_actigraph_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PROactive monitor-based physical activity score for C-PPAC tool — compute_pro_actigraph_score","text":"","code":"compute_pro_actigraph_score(x = 3500, metric = \"steps\") #> [1] 2  compute_pro_actigraph_score(x = 340, metric = \"vmu\") #> [1] 3"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_mvpa.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a figure showing the mean daily MVPA time — create_fig_mvpa","title":"Create a figure showing the mean daily MVPA time — create_fig_mvpa","text":"function generates figure showing daily mean MVPA time correspondence Ekelund et al. (2019; doi: 10.1136/bmj.l4570) mortality hazard ratios.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_mvpa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a figure showing the mean daily MVPA time — create_fig_mvpa","text":"","code":"create_fig_mvpa(score, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_mvpa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a figure showing the mean daily MVPA time — create_fig_mvpa","text":"score numeric value mean daily MVPA time minutes. language character value setting language figure created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_mvpa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a figure showing the mean daily MVPA time — create_fig_mvpa","text":"ggplot object.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_mvpa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a figure showing the mean daily MVPA time — create_fig_mvpa","text":"","code":"create_fig_mvpa(score = 27)"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a figure showing the mean daily Physical Activity Level (PAL) — create_fig_pal","title":"Create a figure showing the mean daily Physical Activity Level (PAL) — create_fig_pal","text":"function generates figure showing daily mean PAL correspondence FAO (2004; http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3) categories.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a figure showing the mean daily Physical Activity Level (PAL) — create_fig_pal","text":"","code":"create_fig_pal(score, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a figure showing the mean daily Physical Activity Level (PAL) — create_fig_pal","text":"score numeric value mean daily PAL. language character value setting language figure created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a figure showing the mean daily Physical Activity Level (PAL) — create_fig_pal","text":"ggplot object.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a figure showing the mean daily Physical Activity Level (PAL) — create_fig_pal","text":"","code":"create_fig_pal(score = 1.8)"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_ratio_mvpa_sed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a figure showing the mean daily MVPA/SED ratio — create_fig_ratio_mvpa_sed","title":"Create a figure showing the mean daily MVPA/SED ratio — create_fig_ratio_mvpa_sed","text":"function generates figure showing daily mean MVPA/SED ratio correspondence Chastin et al. (2021; doi: 10.1123/jpah.2020-0635) mortality hazard ratios.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_ratio_mvpa_sed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a figure showing the mean daily MVPA/SED ratio — create_fig_ratio_mvpa_sed","text":"","code":"create_fig_ratio_mvpa_sed(score, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_ratio_mvpa_sed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a figure showing the mean daily MVPA/SED ratio — create_fig_ratio_mvpa_sed","text":"score numeric value mean daily MVPA/SED ratio. language character value setting language figure created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_ratio_mvpa_sed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a figure showing the mean daily MVPA/SED ratio — create_fig_ratio_mvpa_sed","text":"ggplot object.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_ratio_mvpa_sed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a figure showing the mean daily MVPA/SED ratio — create_fig_ratio_mvpa_sed","text":"","code":"create_fig_ratio_mvpa_sed(score = 0.06)"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_res_by_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a figure with metrics shown for each day — create_fig_res_by_day","title":"Create a figure with metrics shown for each day — create_fig_res_by_day","text":"function generates figure several common metrics shown day physical behavior measurement.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_res_by_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a figure with metrics shown for each day — create_fig_res_by_day","text":"","code":"create_fig_res_by_day(   data,   minimum_wear_time_for_analysis,   start_day_analysis,   end_day_analysis,   language = c(\"en\", \"fr\") )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_res_by_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a figure with metrics shown for each day — create_fig_res_by_day","text":"data dataframe results obtained using prepare_dataset,  mark_wear_time, mark_intensity, recap_by_day functions. minimum_wear_time_for_analysis numeric value indicate minimum number hours wear time considered valid day. start_day_analysis character value indicate start period considered valid day based wear time. end_day_analysis character value indicate end period considered valid day based wear time. language character value setting language figure created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_res_by_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a figure with metrics shown for each day — create_fig_res_by_day","text":"ggplot object","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_res_by_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a figure with metrics shown for each day — create_fig_res_by_day","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\",      frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 mydata_with_intensity_marks <- mark_intensity(     data = mydata_with_wear_marks,      col_axis = \"vm\",      equation = \"Sasaki et al. (2011) [Adults]\",     sed_cutpoint = 200,      mpa_cutpoint = 2690,      vpa_cutpoint = 6167,      age = 32,     weight = 67,     sex = \"male\",     col_steps = \"steps\"     ) #> You have computed intensity metrics with the mark_intensity() function using the following inputs:  #>     axis = vm #>     sed_cutpoint = 200 #>     mpa_cutpoint = 2690 #>     vpa_cutpoint = 6167 #>     equation = Sasaki et al. (2011) [Adults] #>     age = 32 #>     weight = 67 #>     sex = male summary_by_day <- recap_by_day(     data = mydata_with_intensity_marks,      age = 32,      weight = 67,      sex = \"male\",     valid_wear_time_start = \"07:00:00\",     valid_wear_time_end = \"22:00:00\"     ) #> You have computed results with the recap_by_day() function using the following inputs:  #>     age = 32 #>     weight = 67 #>     sex = male create_fig_res_by_day(summary_by_day,      minimum_wear_time_for_analysis = 10,      start_day_analysis = \"00:00:00\",      end_day_analysis = \"23:59:00\",      language = \"en\") #> Warning: Removed 3 rows containing missing values (position_stack). #> Warning: Removed 3 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path). #> Warning: Removed 3 rows containing missing values (geom_text)."},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_sed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a figure showing the mean daily sedentary (SED) time — create_fig_sed","title":"Create a figure showing the mean daily sedentary (SED) time — create_fig_sed","text":"function generates figure showing daily mean SED time correspondence Ekelund et al. (2019; doi: 10.1136/bmj.l4570) mortality hazard ratios.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_sed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a figure showing the mean daily sedentary (SED) time — create_fig_sed","text":"","code":"create_fig_sed(score, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_sed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a figure showing the mean daily sedentary (SED) time — create_fig_sed","text":"score numeric value mean daily SED time minutes. language character value setting language figure created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_sed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a figure showing the mean daily sedentary (SED) time — create_fig_sed","text":"ggplot object.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_sed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a figure showing the mean daily sedentary (SED) time — create_fig_sed","text":"","code":"create_fig_sed(score = 400) #> Warning: NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: NaNs produced #> Warning: Transformation introduced infinite values in continuous y-axis #> Warning: Removed 33 row(s) containing missing values (geom_path)."},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a figure showing the mean daily step count — create_fig_steps","title":"Create a figure showing the mean daily step count — create_fig_steps","text":"function generates figure showing daily mean daily step count correspondence Tudor-Locke et al. (2011; doi: 10.1186/1479-5868-8-79) categories.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a figure showing the mean daily step count — create_fig_steps","text":"","code":"create_fig_steps(score, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a figure showing the mean daily step count — create_fig_steps","text":"score numeric value mean daily step count. language character value setting language figure created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a figure showing the mean daily step count — create_fig_steps","text":"ggplot object.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_fig_steps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a figure showing the mean daily step count — create_fig_steps","text":"","code":"create_fig_steps(score = 12500)"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_flextable_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of results — create_flextable_summary","title":"Create a formatted table of results — create_flextable_summary","text":"function generates formatted table means medians metrics obtained following physical behavior measurement.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_flextable_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of results — create_flextable_summary","text":"","code":"create_flextable_summary(   results_summary_means,   results_summary_medians,   language = c(\"en\", \"fr\") )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_flextable_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of results — create_flextable_summary","text":"results_summary_means dataframe mean results obtained using prepare_dataset,  mark_wear_time, mark_intensity, recap_by_day, average_results functions. results_summary_medians dataframe meadian results obtained using prepare_dataset,  mark_wear_time, mark_intensity, recap_by_day, average_results functions. language character value setting language table created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_flextable_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted table of results — create_flextable_summary","text":"flextable object","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/create_flextable_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of results — create_flextable_summary","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\",      frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 mydata_with_intensity_marks <- mark_intensity(     data = mydata_with_wear_marks,      col_axis = \"vm\",      equation = \"Sasaki et al. (2011) [Adults]\",     sed_cutpoint = 200,      mpa_cutpoint = 2690,      vpa_cutpoint = 6167,      age = 32,     weight = 67,     sex = \"male\",     col_steps = \"steps\"     ) #> You have computed intensity metrics with the mark_intensity() function using the following inputs:  #>     axis = vm #>     sed_cutpoint = 200 #>     mpa_cutpoint = 2690 #>     vpa_cutpoint = 6167 #>     equation = Sasaki et al. (2011) [Adults] #>     age = 32 #>     weight = 67 #>     sex = male summary_by_day <- recap_by_day(     data = mydata_with_intensity_marks,      age = 32,      weight = 67,      sex = \"male\",     valid_wear_time_start = \"07:00:00\",     valid_wear_time_end = \"22:00:00\"     ) #> You have computed results with the recap_by_day() function using the following inputs:  #>     age = 32 #>     weight = 67 #>     sex = male results_summary_means <- average_results(     data = summary_by_day,      minimum_wear_time = 10,      fun = \"mean\"     ) results_summary_medians <- average_results(     data = summary_by_day,      minimum_wear_time = 10,      fun = \"median\"     ) create_flextable_summary(     results_summary_means,     results_summary_medians,      language = \"en\"     ) #> a flextable object. #> col_keys: `Metric`, `Daily mean | median over valid days`  #> header has 1 row(s)  #> body has 13 row(s)  #> original dataset sample:  #>                          Metric         Daily mean | median over valid days #> 1          Number of valid days                                    5 day(s) #> 2                     Wear time 767.8 min (12:47:48) | 770.0 min (12:50:00) #> 3            Total kilocalories                 2292.04 kcal | 2104.66 kcal #> 4 Physical activity level (PAL)                                 1.65 | 1.51 #> 5         Total number of steps                   14869 steps | 14056 steps"},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_guidelines_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get WHO physical activity guidelines status — get_guidelines_status","title":"Get WHO physical activity guidelines status — get_guidelines_status","text":"Get physical activity guidelines status","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_guidelines_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get WHO physical activity guidelines status — get_guidelines_status","text":"","code":"get_guidelines_status(value, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_guidelines_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get WHO physical activity guidelines status — get_guidelines_status","text":"value numeric value indicate daily mean MET-hours spent moderate--vigorous physical activity intensity. language character value setting language table created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_guidelines_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get WHO physical activity guidelines status — get_guidelines_status","text":"character string.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_guidelines_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get WHO physical activity guidelines status — get_guidelines_status","text":"","code":"get_guidelines_status(value = 5) #> [1] \"above the 2020 WHO physical activity guidelines\""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_pal_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FAO physical activity level (PAL) status (http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3) — get_pal_status","title":"Get FAO physical activity level (PAL) status (http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3) — get_pal_status","text":"Get FAO physical activity level (PAL) status (http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3)","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_pal_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FAO physical activity level (PAL) status (http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3) — get_pal_status","text":"","code":"get_pal_status(value, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_pal_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FAO physical activity level (PAL) status (http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3) — get_pal_status","text":"value numeric value indicate daily mean PAL. language character value setting language table created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_pal_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FAO physical activity level (PAL) status (http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3) — get_pal_status","text":"character string.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_pal_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get FAO physical activity level (PAL) status (http://www.fao.org/3/y5686e/y5686e07.htm#bm07.3) — get_pal_status","text":"","code":"get_pal_status(value = 1.8) #> [1] \"'Active or moderately active lifestyle'\""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_ratio_mvpa_sed_comment.html","id":null,"dir":"Reference","previous_headings":"","what":"Get comment about the MPVA/SED ratio — get_ratio_mvpa_sed_comment","title":"Get comment about the MPVA/SED ratio — get_ratio_mvpa_sed_comment","text":"Get comment MPVA/SED ratio","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_ratio_mvpa_sed_comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get comment about the MPVA/SED ratio — get_ratio_mvpa_sed_comment","text":"","code":"get_ratio_mvpa_sed_comment(value, language = c(\"en\", \"fr\"))"},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_ratio_mvpa_sed_comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get comment about the MPVA/SED ratio — get_ratio_mvpa_sed_comment","text":"value numeric value indicate daily mean MVPA/SED ratio. language character value setting language table created: en english; fr french.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_ratio_mvpa_sed_comment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get comment about the MPVA/SED ratio — get_ratio_mvpa_sed_comment","text":"character string.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/get_ratio_mvpa_sed_comment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get comment about the MPVA/SED ratio — get_ratio_mvpa_sed_comment","text":"","code":"get_ratio_mvpa_sed_comment(value = 0.03) #> [1] \"the patient could get further health benefits by replacing more sedentary time by physical activity time\""},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Add intensity metrics — mark_intensity","title":"Add intensity metrics — mark_intensity","text":"function adds several columns dataset contains accelerometer counts data. columns concern respectively sedentary time (SED), light physical activity time (LPA), moderate physical activity time (MPA), vigorous physical activity time (VPA), metabolic equivalent task (METs), kilocalories (kcal), MET-hours time spent moderate--vigorous physical activity, step-based metrics (based step accumulation per minute). SED, LPA, MPA, VPA columns, function provides, epoch, numeric value 1 value configured counts variable respectively fulfills criteria SED, LPA, MPA, VPA category (e.g., SED column, 1 may provided VM counts <150 counts/min); otherwise 0 provided. METs computed using compute_mets function. METs computed using published equation one following scientific articles: Sasaki et al. (2011; doi:10.1016/j.jsams.2011.04.003); Santos-Lozano et al. (2013; 10.1055/s-0033-1337945); Freedson et al. (1998; doi: 10.1097/00005768-199805000-00021). Kilocalories computed follows. non-SED epochs, MET values multiplied BMR expressed kcal/min using Santos-Lozano et al. (2013) equations since, study, METs multiples measured (standard) resting metabolic rate. using  Sasaki et al. (2011) Freedson et al. (1998) equations, MET values multiplied weight 1/60 since, studies, METs multiples standard resting metabolic rate (.e., 3.5 mLO2/min/kg) standard MET approximately equivalent 1 kcal/kg/h (Butte et al., 2012; doi: 10.1249/MSS.0b013e3182399c0e). SED epochs, BMR expressed kcal/min directly used. BMR computed using compute_bmr function uses sex, age, weight inputs, one equations retrieved paper Henry et al. (2005; doi: 10.1079/PHN2005801). MET-hours obtained multiplying METs time related epoch (1/60e hour), MET value  >=3.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add intensity metrics — mark_intensity","text":"","code":"mark_intensity(   data,   col_axis = \"vm\",   sed_cutpoint = 200,   mpa_cutpoint = 2690,   vpa_cutpoint = 6167,   equation = c(\"Sasaki et al. (2011) [Adults]\", \"Santos-Lozano et al. (2013) [Adults]\",     \"Freedson et al. (1998) [Adults]\", \"Santos-Lozano et al. (2013) [Older adults]\"),   age = 40,   weight = 70,   sex = c(\"male\", \"female\", \"undefined\"),   col_steps = \"steps\",   dates = NULL )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add intensity metrics — mark_intensity","text":"data dataframe obtained using prepare_dataset mark_wear_time functions. col_axis character value indicate name variable used determining intensity categories. sed_cutpoint numeric value time considered spent sedentary behavior. mpa_cutpoint numeric value time considered spent moderate--vigorous physical activity. vpa_cutpoint numeric value time considered spent vigorous physical activity. equation character string indicate equation used estimating METs. age numeric value yr. weight numeric value kg. sex character value. col_steps character value indicate name variable used analyzing steps. dates character vector containing dates retained analyzis. dates must \"YYYY-MM-DD\" format.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_intensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add intensity metrics — mark_intensity","text":"dataframe.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_intensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add intensity metrics — mark_intensity","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\",     frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 mydata_with_intensity_marks <- mark_intensity(     data = mydata_with_wear_marks,      col_axis = \"vm\",      equation = \"Sasaki et al. (2011) [Adults]\",     sed_cutpoint = 200,      mpa_cutpoint = 2690,      vpa_cutpoint = 6167,      age = 32,     weight = 67,     sex = \"male\",     col_steps = \"steps\"     ) #> You have computed intensity metrics with the mark_intensity() function using the following inputs:  #>     axis = vm #>     sed_cutpoint = 200 #>     mpa_cutpoint = 2690 #>     vpa_cutpoint = 6167 #>     equation = Sasaki et al. (2011) [Adults] #>     age = 32 #>     weight = 67 #>     sex = male head(mydata_with_intensity_marks) #>        col_time_stamp       date     time           timestamp axis1 axis2 axis3 #> 1 2021-04-07 06:00:00 2021-04-07 06:00:00 2021-04-07 06:00:00     0     0     0 #> 2 2021-04-07 06:01:00 2021-04-07 06:01:00 2021-04-07 06:01:00     0     0     0 #> 3 2021-04-07 06:02:00 2021-04-07 06:02:00 2021-04-07 06:02:00     0     0     0 #> 4 2021-04-07 06:03:00 2021-04-07 06:03:00 2021-04-07 06:03:00     0     0     0 #> 5 2021-04-07 06:04:00 2021-04-07 06:04:00 2021-04-07 06:04:00     0     0     0 #> 6 2021-04-07 06:05:00 2021-04-07 06:05:00 2021-04-07 06:05:00     0     0     0 #>   steps inclineoff inclineStanding inclineSitting inclineLying vm wearing #> 1     0         60               0              0            0  0      nw #> 2     0         60               0              0            0  0      nw #> 3     0         60               0              0            0  0      nw #> 4     0         60               0              0            0  0      nw #> 5     0         60               0              0            0  0      nw #> 6     0         60               0              0            0  0      nw #>     weekday days non_wearing_count wearing_count SED LPA MPA VPA     METS #> 1 Wednesday    1                 1             0   1   0   0   0 0.668876 #> 2 Wednesday    1                 1             0   1   0   0   0 0.668876 #> 3 Wednesday    1                 1             0   1   0   0   0 0.668876 #> 4 Wednesday    1                 1             0   1   0   0   0 0.668876 #> 5 Wednesday    1                 1             0   1   0   0   0 0.668876 #> 6 Wednesday    1                 1             0   1   0   0   0 0.668876 #>     kcal mets_hours_mvpa accum_steps_60min accum_steps_30min accum_steps_20min #> 1 1.0725               0                NA                NA                NA #> 2 1.0725               0                NA                NA                NA #> 3 1.0725               0                NA                NA                NA #> 4 1.0725               0                NA                NA                NA #> 5 1.0725               0                NA                NA                NA #> 6 1.0725               0                NA                NA                NA #>   accum_steps_5min accum_steps_1min intensity_category bout #> 1               NA                0            Nonwear    1 #> 2               NA                0            Nonwear    1 #> 3                0                0            Nonwear    1 #> 4                0                0            Nonwear    1 #> 5                0                0            Nonwear    1 #> 6                0                0            Nonwear    1"},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_wear_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark dataset for nonwear/wear time — mark_wear_time","title":"Mark dataset for nonwear/wear time — mark_wear_time","text":"function wraps wearingMarking function PhysicalActivity package, adds two variables dataset: variable non_wearing_count contains number 1 device worn (otherwise, 0 used), variable wearing_count contains number 1 device worn (otherwise, 0 used).","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_wear_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark dataset for nonwear/wear time — mark_wear_time","text":"","code":"mark_wear_time(   dataset,   TS = \"timestamp\",   cts = \"vm\",   frame = 90,   allowanceFrame = 2,   streamFrame = 30 )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_wear_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark dataset for nonwear/wear time — mark_wear_time","text":"dataset dataframe obtained using prepare_dataset function. TS character value indicating name variable date time information provided. cts character value indicating name variable used nonwear/wear detection algorithm. frame numeric value length time window (minutes) used detect nonwear/wear time. allowanceFrame numeric value length time window (minutes) nonzero counts allowed within detected nonwear period. streamFrame numeric value length time window required around detected activity validate nonwear time.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_wear_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark dataset for nonwear/wear time — mark_wear_time","text":"dataframe.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/mark_wear_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark dataset for nonwear/wear time — mark_wear_time","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\",      frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 head(mydata_with_wear_marks) #>        col_time_stamp       date     time           timestamp axis1 axis2 axis3 #> 1 2021-04-07 06:00:00 2021-04-07 06:00:00 2021-04-07 06:00:00     0     0     0 #> 2 2021-04-07 06:01:00 2021-04-07 06:01:00 2021-04-07 06:01:00     0     0     0 #> 3 2021-04-07 06:02:00 2021-04-07 06:02:00 2021-04-07 06:02:00     0     0     0 #> 4 2021-04-07 06:03:00 2021-04-07 06:03:00 2021-04-07 06:03:00     0     0     0 #> 5 2021-04-07 06:04:00 2021-04-07 06:04:00 2021-04-07 06:04:00     0     0     0 #> 6 2021-04-07 06:05:00 2021-04-07 06:05:00 2021-04-07 06:05:00     0     0     0 #>   steps inclineoff inclineStanding inclineSitting inclineLying vm wearing #> 1     0         60               0              0            0  0      nw #> 2     0         60               0              0            0  0      nw #> 3     0         60               0              0            0  0      nw #> 4     0         60               0              0            0  0      nw #> 5     0         60               0              0            0  0      nw #> 6     0         60               0              0            0  0      nw #>     weekday days non_wearing_count wearing_count #> 1 Wednesday    1                 1             0 #> 2 Wednesday    1                 1             0 #> 3 Wednesday    1                 1             0 #> 4 Wednesday    1                 1             0 #> 5 Wednesday    1                 1             0 #> 6 Wednesday    1                 1             0"},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot accelerometer data for each day — plot_data","title":"Plot accelerometer data for each day — plot_data","text":"function plots accelerometer data time day measurement, possibility specify metric visualize.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot accelerometer data for each day — plot_data","text":"","code":"plot_data(   data,   metric = \"axis1\",   col_time = \"time\",   col_nonwear = \"non_wearing_count\",   col_wear = \"wearing_count\" )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot accelerometer data for each day — plot_data","text":"data dataframe obtained using prepare_dataset mark_wear_time functions. metric character value indicate name variable plotted time. col_time character value indicate name variable plot time data. col_nonwear character value indicate name variable used count nonwear time. col_wear character value indicate name variable used count wear time.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot accelerometer data for each day — plot_data","text":"ggplot object.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot accelerometer data for each day — plot_data","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\",      frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 plot_data(     data = mydata_with_wear_marks,      metric = \"vm\",      col_time = \"time\",      col_nonwear = \"non_wearing_count\",      col_wear = \"wearing_count\"     )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data_with_intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot accelerometer data for each day with both nonwear time and physical activity intensity categories — plot_data_with_intensity","title":"Plot accelerometer data for each day with both nonwear time and physical activity intensity categories — plot_data_with_intensity","text":"function plots accelerometer data intensity categories time day measurement, possibility specify metric visualize.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data_with_intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot accelerometer data for each day with both nonwear time and physical activity intensity categories — plot_data_with_intensity","text":"","code":"plot_data_with_intensity(   data,   metric = \"axis1\",   col_time = \"time\",   col_nonwear = \"non_wearing_count\",   col_wear = \"wearing_count\",   valid_wear_time_start = \"00:00:00\",   valid_wear_time_end = \"23:59:00\" )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data_with_intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot accelerometer data for each day with both nonwear time and physical activity intensity categories — plot_data_with_intensity","text":"data dataframe obtained using prepare_dataset, mark_wear_time, mark_intensity functions. metric character value indicate name variable plotted time. col_time character value indicate name variable plot time data. col_nonwear character value indicate name variable used count nonwear time. col_wear character value indicate name variable used count wear time. valid_wear_time_start character value HH:MM:SS format set start daily period considered computing valid wear time. valid_wear_time_end character value HH:MM:SS format set end daily period considered computing valid wear time.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data_with_intensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot accelerometer data for each day with both nonwear time and physical activity intensity categories — plot_data_with_intensity","text":"ggplot object.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/plot_data_with_intensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot accelerometer data for each day with both nonwear time and physical activity intensity categories — plot_data_with_intensity","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\",      frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 mydata_with_intensity_marks <- mark_intensity(     data = mydata_with_wear_marks,      col_axis = \"vm\",      equation = \"Sasaki et al. (2011) [Adults]\",     sed_cutpoint = 200,      mpa_cutpoint = 2690,      vpa_cutpoint = 6167,      age = 32,     weight = 67,     sex = \"male\",     col_steps = \"steps\"     ) #> You have computed intensity metrics with the mark_intensity() function using the following inputs:  #>     axis = vm #>     sed_cutpoint = 200 #>     mpa_cutpoint = 2690 #>     vpa_cutpoint = 6167 #>     equation = Sasaki et al. (2011) [Adults] #>     age = 32 #>     weight = 67 #>     sex = male plot_data_with_intensity(     data = mydata_with_intensity_marks,     metric = \"vm\",     valid_wear_time_start = \"00:00:00\",     valid_wear_time_end = \"23:59:00\"     )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/prepare_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare accelerometer data — prepare_dataset","title":"Prepare accelerometer data — prepare_dataset","text":"function performs following actions: reads .agd file, collapses accelerometer data based configured epoch length (now, 60 s can used), creates vector magnitude variable, creates date time columns, finally organizes columns predefined order. .agd file must contain least following columns: axis1 axis2 axis3 steps inclinestanding inclinesitting inclinelying","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/prepare_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare accelerometer data — prepare_dataset","text":"","code":"prepare_dataset(data, epoch_len_out = 60, col_time_stamp = \"timestamp\")"},{"path":"https://pydemull.github.io/activAnalyzer/reference/prepare_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare accelerometer data — prepare_dataset","text":"data Path .agd file exported Actilife software. epoch_len_out numeric value (seconds) setting length desired epoch accumulating accelerometer data. now, 60 can used. col_time_stamp character value corresponds name variable contains date time information.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/prepare_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare accelerometer data — prepare_dataset","text":"dataframe.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/prepare_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare accelerometer data — prepare_dataset","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") head(mydata) #>        col_time_stamp       date     time           timestamp axis1 axis2 axis3 #> 1 2021-04-07 06:00:00 2021-04-07 06:00:00 2021-04-07 06:00:00     0     0     0 #> 2 2021-04-07 06:01:00 2021-04-07 06:01:00 2021-04-07 06:01:00     0     0     0 #> 3 2021-04-07 06:02:00 2021-04-07 06:02:00 2021-04-07 06:02:00     0     0     0 #> 4 2021-04-07 06:03:00 2021-04-07 06:03:00 2021-04-07 06:03:00     0     0     0 #> 5 2021-04-07 06:04:00 2021-04-07 06:04:00 2021-04-07 06:04:00     0     0     0 #> 6 2021-04-07 06:05:00 2021-04-07 06:05:00 2021-04-07 06:05:00     0     0     0 #>   steps inclineoff inclineStanding inclineSitting inclineLying vm #> 1     0         60               0              0            0  0 #> 2     0         60               0              0            0  0 #> 3     0         60               0              0            0  0 #> 4     0         60               0              0            0  0 #> 5     0         60               0              0            0  0 #> 6     0         60               0              0            0  0"},{"path":"https://pydemull.github.io/activAnalyzer/reference/recap_by_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize results by day — recap_by_day","title":"Summarize results by day — recap_by_day","text":"function summarizes accelerometer results day measurement period.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/recap_by_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize results by day — recap_by_day","text":"","code":"recap_by_day(   data,   col_time = \"time\",   valid_wear_time_start = \"00:00:00\",   valid_wear_time_end = \"23:59:00\",   age = 40,   weight = 70,   sex = c(\"male\", \"female\", \"undefined\") )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/recap_by_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize results by day — recap_by_day","text":"data dataframe obtained using prepare_dataset, mark_wear_time, mark_intensity functions. col_time character value indicating name variable time information provided. valid_wear_time_start character value HH:MM:SS format set start daily period consider computing valid wear time. valid_wear_time_end character value HH:MM:SS format set end daily period consider computing valid wear time. age numeric value yr. weight numeric value kg. sex character value.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/recap_by_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize results by day — recap_by_day","text":"dataframe.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/recap_by_day.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize results by day — recap_by_day","text":"following metrics computed epochs corresponding valid wear time: wear_time: total wear time computed using daily period defined function total_counts_axis1: total counts vertical axis total_counts_vm: total counts vector magnitude axis1_per_min: mean counts per minute vertical axis vm_per_min: mean counts per minute vector magnitude total_steps: total step count total_kcal: total kilocalories minutes_SED: total minutes spent SED behavior minutes_LPA: total minutes spent LPA behavior minutes_MPA: total minutes spent MPA behavior minutes_VPA: total minutes spent VPA behavior minutes_MVPA: total minutes spent MVPA behavior percent_SED: proportion wear time spent SED behavior percent_LPA: proportion wear time spent LPA behavior percent_MPA: proportion wear time spent MPA behavior percent_VPA: proportion wear time spent VPA behavior percent_MVPA: proportion wear time spent MPVA behavior max_steps_60min: best step accumulation per minute averaged window 60 continuous minutes max_steps_30min: best step accumulation per minute averaged window 30 continuous minutes max_steps_20min: best step accumulation per minute averaged window 20 continuous minutes max_steps_5min: best step accumulation per minute averaged window 5 continuous minutes max_steps_1min: best step accumulation per minute window 1 minute peak_steps_60min: step accumulation per minute averaged best 60 continuous discontinuous minutes peak_steps_30min: step accumulation per minute averaged best 30 continuous discontinuous minutes peak_steps_20min: step accumulation per minute averaged best 20 continuous discontinuous minutes peak_steps_5min: step accumulation per minute averaged best 5 continuous discontinuous minutes peak_steps_1min: step accumulation per minute best minute (result max_steps_1min) mets_hours_mvpa: total MET-hours spent MPVA behavior ratio_mvpa_sed: ratio MVPA SED times (minutes_MVPA / minutes_SED) PAL computed dividing total energy expenditure (TEE) BMR. TEE obtained summing kilocalories measured valid wear time epochs kilocalories related BMR expended nonwear time epochs (assumed periods device worn corresponded sleeping periods, energy expenditure near BMR), multiplying sum 10/9 take account thermic effect food. course, calculations may conduct underestimate TEE PAL device removed prolonged periods physical activity. Moreover, even device correctly worn, estimate PAL approximate since BMR kilocalories estimated using methods may accurate individual level.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/recap_by_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize results by day — recap_by_day","text":"","code":"file <- system.file(\"extdata\", \"acc.agd\", package = \"activAnalyzer\") mydata <- prepare_dataset(data = file, epoch_len_out = 60, col_time_stamp = \"timestamp\") mydata_with_wear_marks <- mark_wear_time(     dataset = mydata,      TS = \"timestamp\",      cts  = \"vm\",      frame = 90,      allowanceFrame = 2,      streamFrame = 30     ) #> frame is 90 #> streamFrame is 30 #> allowanceFrame is 2 mydata_with_intensity_marks <- mark_intensity(     data = mydata_with_wear_marks,      col_axis = \"vm\",      equation = \"Sasaki et al. (2011) [Adults]\",     sed_cutpoint = 200,      mpa_cutpoint = 2690,      vpa_cutpoint = 6167,      age = 32,     weight = 67,     sex = \"male\",     col_steps = \"steps\"     ) #> You have computed intensity metrics with the mark_intensity() function using the following inputs:  #>     axis = vm #>     sed_cutpoint = 200 #>     mpa_cutpoint = 2690 #>     vpa_cutpoint = 6167 #>     equation = Sasaki et al. (2011) [Adults] #>     age = 32 #>     weight = 67 #>     sex = male recap_by_day(     data = mydata_with_intensity_marks,      age = 32,      weight = 67,      sex = \"male\",     valid_wear_time_start = \"07:00:00\",     valid_wear_time_end = \"22:00:00\"     ) #> You have computed results with the recap_by_day() function using the following inputs:  #>     age = 32 #>     weight = 67 #>     sex = male #> # A tibble: 6 × 31 #>   date       wear_time total_counts_ax… total_counts_vm axis1_per_min vm_per_min #>   <date>         <dbl>            <int>           <dbl>         <dbl>      <dbl> #> 1 2021-04-07       720           359125         706252.          499.       981. #> 2 2021-04-08       811           495257         923432.          611.      1139. #> 3 2021-04-09       718          1222315        1930805.         1702.      2689. #> 4 2021-04-10       770           320847         781469.          417.      1015. #> 5 2021-04-11       820           167999         415457.          205.       507. #> 6 2021-04-12         0                0              0           NaN        NaN  #> # … with 25 more variables: total_steps <int>, total_kcal <dbl>, #> #   minutes_SED <dbl>, minutes_LPA <dbl>, minutes_MPA <dbl>, minutes_VPA <dbl>, #> #   minutes_MVPA <dbl>, percent_SED <dbl>, percent_LPA <dbl>, #> #   percent_MPA <dbl>, percent_VPA <dbl>, percent_MVPA <dbl>, #> #   max_steps_60min <dbl>, max_steps_30min <dbl>, max_steps_20min <dbl>, #> #   max_steps_5min <dbl>, max_steps_1min <dbl>, peak_steps_60min <dbl>, #> #   peak_steps_30min <dbl>, peak_steps_20min <dbl>, peak_steps_5min <dbl>, …"},{"path":"https://pydemull.github.io/activAnalyzer/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"https://pydemull.github.io/activAnalyzer/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://pydemull.github.io/activAnalyzer/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See ?golem::get_golem_options details.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-041","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.4.1","title":"activAnalyzer 0.4.1","text":"Updated calculations PROactive accelerometer scores (previous calculations actually appropriate using means days measurement, medians). Now app allows compute scores medians means days measurement (see references documentation details). Updated plots algorithms plots correctly displayed app days recorded. Hidden download buttons reports enough valid days.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-040","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.4.0","title":"activAnalyzer 0.4.0","text":"Updated UI appearance. Updated documentation: now clear metrics computed using valid wear time . Updated graphics activity data shown day (order dates systematically respected). Added possibility select days analyze. Updated feedbacks provided inputs properly set.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-030","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.3.0","title":"activAnalyzer 0.3.0","text":"now one information wear time, , wear time related period day considered user (, also wear time 24-h cycle). Updated graphics reports (showing hazard ratios) now provide appropriate shapes HR curves comparison figures original articles (thanks better configuration R function fit data). Added daily medians final results. Added definitions abbreviations report. Added references figures report. Added daily axis1 counts per minute list computed metrics. Added daily vm counts per minute list computed metrics. Added PROactive monitor-based physical activity score report. Updated users guides. Updated title DESCRIPTION file. Updated plot functions. Converted blocks code reports R functions. Changed algorithm provide PROactive scores (previous algorithm actually suited use D-PPAC, use C-PPAC expected). Minor changes ui.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-020","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.2.0","title":"activAnalyzer 0.2.0","text":"Added tinytex package list packages imported installation activAnalyzer package. Updated table showing description studies related MET equations (study Sasaki et al. (2011), number 50 participants replaced number 36, number participants actually completed study). Added possibility use Freedson MVPA cut-points. using Sasaki et al. Freedson et al. equations, kilocalories present computed multiplying MET values weight 1/60 better correspond context original studies (METs computed dividing VO2 3.5, .e., default BMR value ml/min/kg; assumes 1 MET = 1 kcal/kg/min). Santos-Lozano et al. equations, kilocalories still computed multiplying MET values BMR (kcal/min) original study, METs obtained dividing VO2 measured resting metabolic rate, .e., personalized BMR value ml/min/kg. Added possibility set period day (e.g., 07:00:00 20:00:00) given duration wear time obtained validate day.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-013","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.1.3","title":"activAnalyzer 0.1.3","text":"Added pieces advice guides caution interpreting patient’s scores relation hazard ratios. Updated DESCRIPTION file set minimum version numbers packages place appropriate packages names Suggests section.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-012","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.1.2","title":"activAnalyzer 0.1.2","text":"Provided default value 0 age weight inputs caused bugs validation process value (initial state app) provided.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-011","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.1.1","title":"activAnalyzer 0.1.1","text":"Replaced term “metric” “variable” “data” ui guides app.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-010","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.1.0","title":"activAnalyzer 0.1.0","text":"Added new block code stop app last user leaves app. Modified plot visualizing data wear time data related day measurement one line. Added step-based metrics results (app, report). Added graph visualize time spent different activity intensity categories. Updated user’s guide step-based metrics information.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-003","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.0.3","title":"activAnalyzer 0.0.3","text":"Added alert message closing web window. Finally deleted block code initially introduced stop websocket server app used desktop application. Indeed, code led close app users one user left app shinyapps.io plateform.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-002","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.0.2","title":"activAnalyzer 0.0.2","text":"Added code stop process closing app used desktop. Rounded wear time result averaged valid days. Rounded PA/SB ratio MET-hr results 2 digits summary table. Added line ratio MVPA/SB table report.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-001","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.0.1","title":"activAnalyzer 0.0.1","text":"Updated version number indicate important functions (giving results) tested app now finalized user interface.","code":""},{"path":"https://pydemull.github.io/activAnalyzer/news/index.html","id":"activanalyzer-0009000","dir":"Changelog","previous_headings":"","what":"activAnalyzer 0.0.0.9000","title":"activAnalyzer 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
